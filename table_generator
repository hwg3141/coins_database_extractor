def generate_searchable_html_table(data):
    if not data:
        return "<p>No data available</p>"

    # Create sets of unique values for filtering
    auction_names = sorted(set(entry.get("name", "N/A") for entry in data))
    auction_numbers = sorted(set(entry.get("auction_name", "N/A") for entry in data))
    
    # Start the HTML content
    html = '''
    <html>
    <head>
        <title>Extracted Data</title>
        <style>
            table {
                width: 100%;
                border-collapse: collapse;
            }
            th, td {
                border: 1px solid black;
                padding: 8px;
                text-align: left;
            }
            th {
                background-color: #f2f2f2;
            }
        </style>
        <script>
            function filterTable() {
                var nameDropdown = document.getElementById("nameDropdown");
                var selectedName = nameDropdown.value.toLowerCase();
                var auctionNumberInput = document.getElementById("auctionNumberInput").value.toLowerCase();
                var rows = document.querySelectorAll("#dataTable tbody tr");
                
                rows.forEach(row => {
                    var auctionName = row.getAttribute("data-auction-name").toLowerCase();
                    var auctionNumber = row.getAttribute("data-auction-number").toLowerCase();
                    
                    var showRow = (selectedName === "All" || auctionName === selectedName) &&
                                   (auctionNumberInput === "" || auctionNumber.includes(auctionNumberInput));
                    
                    row.style.display = showRow ? "" : "none";
                });
            }

            function generateLotLink() {
                var nameDropdown = document.getElementById("nameDropdown");
                var selectedAuction = nameDropdown.value;
                var lotNumber = document.getElementById("lotNumberInput").value;
                var linkOutput = document.getElementById("linkOutput");

                if (selectedAuction !== "All" && lotNumber.trim() !== "") {
                    var auctionNumber = document.querySelector(`option[value="${selectedAuction}"]`).dataset.number;
                    var url = `https://www.numisbids.com/n.php?p=lot&sid=${auctionNumber}&lot=${lotNumber}`;
                    linkOutput.innerHTML = `<a href="${url}" target="_blank">View Lot</a>`;
                } else {
                    linkOutput.innerHTML = "Please select an auction and enter a lot number.";
                }
            }
        </script>
    </head>
    <body>
        <h1>Extracted Data</h1>
        <label for="nameDropdown">Filter by Auction Name:</label>
        <select id="nameDropdown" onchange="filterTable()">
            <option value="All">All</option>
    '''
    
    # Add options to the dropdown for auction names
    for name in auction_names:
        # Find the auction number corresponding to this auction name
        auction_number = next((entry.get("auction_name", "N/A") for entry in data if entry.get("name") == name), "N/A")
        html += f'<option value="{name}" data-number="{auction_number}">{name}</option>\n'
    
    html += '''
        </select>
        <br><br>
        <label for="auctionNumberInput">Filter by Auction Number:</label>
        <input type="text" id="auctionNumberInput" oninput="filterTable()" placeholder="Enter auction number">
        <br><br>
        <label for="lotNumberInput">Enter Lot Number:</label>
        <input type="text" id="lotNumberInput">
        <button onclick="generateLotLink()">Generate Lot Link</button>
        <br><br>
        <div id="linkOutput"></div>
        <br><br>
        
        <table id="dataTable">
            <thead>
                <tr>
                    <th>Auction Name</th>
                    <th>Auction Number</th>
                    <th>Date</th>
                    <th>Link</th>
                </tr>
            </thead>
            <tbody>
    '''
    
    # Table rows
    for entry in data:
        auction_name = entry.get("name", "N/A")
        auction_number = entry.get("auction_name", "N/A")
        date = entry.get("date", "N/A")
        link = entry.get("link", "#")
        
        html += f'''
            <tr data-auction-name="{auction_name}" data-auction-number="{auction_number}">
                <td>{auction_name}</td>
                <td>{auction_number}</td>
                <td>{date}</td>
                <td><a href="{link}" target="_blank">Link</a></td>
            </tr>
        '''
    
    # Close HTML tags
    html += '''
            </tbody>
        </table>
    </body>
    </html>
    '''
    
    return html

# Generate HTML content with search and filter functionality
html_content = generate_searchable_html_table(details)

# Save the HTML content to a file named 'htmldata2.txt'
with open('htmldata2.txt', 'w', encoding='utf-8') as file:
    file.write(html_content)

print("Searchable HTML table has been saved to 'htmldata2.txt'.")
